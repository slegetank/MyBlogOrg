#+TITLE: 如何优雅的使用Dired
#+AUTHOR: slegetank
#+EMAIL: slege_tank@163.com
#+DATE: <2017-01-06 14:33>
#+SETUPFILE: ~/.emacs.d/org-template/level-1.org
#+blogtype: Emacs

#+BEGIN_COMMENT PREVIEW

Dired作为emacs的目录管理工具，必学。

#+END_COMMENT

Dired是directory editor的简写，是emacs内置的目录管理工具。习惯之后真的灰常强大，有些黑科技让我叹为观止。
这里是我的配置：[[https://github.com/slegetank/.emacs.d/blob/master/init/init-dired.org][Dired config]] 。

* 为什么
+ emacs内置，可以与文件编辑无缝操作。
+ 在批量操作的时候很方便；正则、wdired很强大。
当然，如果你不是emacser，这些都不是必要的条件；反之，这就是你的强大助手--就像emacs其他强大的特性一样，你需要花费时间去了解他们。

* 快捷键
首先要记一下一些常用的快捷键。
| key   | function                                      |
| (     | 显示、隐藏详细信息                            |
| s     | 排序                                          |
| q     | 退出                                          |
| C, %C | copy                                          |
| R, %R | 重命名                                        |
| d, %d | 添加删除标记                                  |
| D     | 删除                                          |
| +     | 创建路径                                      |
| Z     | 压缩、解压缩文件                              |
| o     | 在另一个窗口打开                              |
| m, %m | 标记, 例如\.org将会标记目录下所有org mode文件 |
| %g    | 根据文件的内容是否包含正则标记文件            |
| u     | 去除标记                                      |
| U     | 去除所有标记                                  |
| ^     | 上一层目录                               |
| *.    | 标记所有后缀名为xx的文件           |
| V     | 区域选择                                      |
% 表示正则相关的操作，极大的增强了原命令的功能。
** 自定义快捷键
+ 外部
  | key   | function                                 |
  | dd/do | 打开当前文件所在的目录/在另一个窗口打开  |
  | dr    | 打开最近访问的路径                       |
  | df    | 打开Mac的Finder所打开的路径              |
  | dx    | 打开XCode工程所在的目录并且打开magit窗口 |
  | fx    | 打开XCode所编辑的文件                    |
  | dm    | 打开书签所标记的路径                     |
+ 内部
  | key | function                  |
  | O   | 以MacOS默认的行为打开文件 |
  | V   | 区域选择              |
  | E   | wdired                    |

* Better defaults
** 单个buffer
dired默认情况下每个目录会单独开一个buffer，而这是我们所不希望看到的；有几种方法进行改变：
+ 自己改
    #+BEGIN_SRC emacs-lisp
    (setq dired-recursive-copies 'always)
    (setq dired-recursive-deletes 'always)
    (setq dired-dwim-target t)

    (put 'dired-find-alternate-file 'disabled nil)
    (with-eval-after-load 'dired
        (define-key dired-mode-map (kbd "RET") 'dired-find-alternate-file)
        (define-key dired-mode-map (kbd "^") (lambda () (interactive) (find-alternate-file ".."))))  ; was dired-up-directory)
    #+END_SRC
+ [[https://github.com/crocket/dired-single][dired-single]]
+ [[https://www.emacswiki.org/emacs/dired+.el][dired+]]
    #+BEGIN_SRC emacs-lisp
    (diredp-toggle-find-file-reuse-dir 1)
    #+END_SRC

** 拷贝
#+BEGIN_SRC emacs-lisp
  (setq dired-dwim-target t)
#+END_SRC
如果其他窗口也为dired mode，会以其为目标路径拷贝文件。
** 过滤
有些系统生成的文件我们并不希望看到，例如python的pyc文件，这时可以忽略：
#+BEGIN_SRC emacs-lisp
  (setq-default dired-omit-files-p t)
  (setq dired-omit-files
        (concat dired-omit-files "\\.pyc$"))
#+END_SRC
** 默认递归操作文件夹
#+BEGIN_SRC emacs-lisp
  (setq dired-recursive-copies 'always)
  (setq dired-recursive-deletes 'always)
#+END_SRC
* 排序
emacs原始的排序只有根据字符和modify time进行排序；有一个插件[[https://www.emacswiki.org/emacs/download/dired-sort.el][dired-sort]] 允许用户根据自己的需要进行排序。但是其中的根据后缀名排序只支持GNU版本的ls；所以对于MacOS及其他系统，最简单的方法是使用elisp版本的ls：
#+BEGIN_SRC emacs-lisp
  (require 'ls-lisp)
  (setq ls-lisp-use-insert-directory-program nil)
  (setq ls-lisp-verbosity nil)
#+END_SRC

并且，我希望文件夹能处在文件的前面：
#+BEGIN_SRC emacs-lisp
  (defun custom-dired-sort-dir-first ()
    "Dired sort hook to list directories first."
    (save-excursion
      (let (buffer-read-only)
        (forward-line 2) ;; beyond dir. header
        (sort-regexp-fields t "^.*$" "[ ]*." (point) (point-max))))
    (and (featurep 'xemacs)
         (fboundp 'dired-insert-set-properties)
         (dired-insert-set-properties (point-min) (point-max)))
    (set-buffer-modified-p nil))

  (add-hook 'dired-after-readin-hook 'custom-dired-sort-dir-first)
#+END_SRC

这样，我们就可以自定义排序了，具体效果是这样的：
[[file:../static/20170106-dired-0.gif]]
* 书签
跟书签配合之后，在访问远程路径的时候特别方便。借鉴了这篇文章：[[http://scottfrazersblog.blogspot.sg/2009/12/emacs-using-bookmarked-directories.html
][Emacs: Using Bookmarked Directories]] 。
如果TRAMP配置合适的话，可以达到一键远程访问的效果：
[[file:../static/20170106-dired-2.gif]]
* wdired
这个功能就很黑魔法了。我把它绑定到了“E”，C-c C-c确认修改；C-c C-k放弃修改。这个功能允许用户像操作普通文件那样操作目录，例如批量重命名：
[[file:../static/20170106-dired-1.gif]]

当操作不是很复杂的时候可以用正则来匹配操作，而当比较复杂的时候就可以用这个功能了，高效、强大。

* 参考
emacsist: [[http://mp.weixin.qq.com/s/73rHOjCF8Ot1kZdJuU6tgQ][Emacs文件管理神器--dired常用操作说明]]

